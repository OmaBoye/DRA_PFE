# Generated by Django 5.2 on 2025-06-03 19:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the sample type (e.g., Blood, Urine)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the sample type')),
                ('processing_days', models.PositiveIntegerField(default=1, help_text='Number of days typically needed to process this sample type', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Sample Type',
                'verbose_name_plural': 'Sample Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection_date', models.DateTimeField(help_text='Date and time when the sample was collected')),
                ('received_date', models.DateTimeField(blank=True, help_text='Date and time when the sample was received in the lab', null=True)),
                ('status', models.CharField(choices=[('collected', 'Collected'), ('received', 'Received in Lab'), ('processing', 'Processing'), ('analyzed', 'Analyzed'), ('reported', 'Reported'), ('archived', 'Archived')], default='collected', help_text='Current status of the sample in the workflow', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes about the sample')),
                ('barcode', models.CharField(help_text='Unique barcode identifier for the sample', max_length=50, unique=True)),
                ('patient', models.ForeignKey(help_text='The patient from whom this sample was collected', on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='patients.patient')),
                ('sample_type', models.ManyToManyField(help_text='The type of sample collected', to='samples.sampletype')),
            ],
            options={
                'verbose_name': 'Sample',
                'verbose_name_plural': 'Samples',
                'ordering': ['-collection_date'],
                'indexes': [models.Index(fields=['barcode'], name='samples_sam_barcode_9a8992_idx'), models.Index(fields=['status'], name='samples_sam_status_431764_idx'), models.Index(fields=['collection_date'], name='samples_sam_collect_92fed6_idx')],
            },
        ),
    ]
